#!/bin/bash
#
# Author: Ronald Joe Record <ronaldrecord@gmail.com>
#
# See https://developers.google.com/drive/api/v3/ref-search-terms#operators
# for more info on the Google Drive for Developers API (V3)
#
gdinst=`type -p gdrive`
[ "${gdinst}" ] || {
    echo "The 'gdrive' command is not installed or not in the execution PATH"
    echo "Visit https://github.com/prasmussen/gdrive/releases to download"
    echo "a 'gdrive' binary for this platform"
    exit 1
}

GHOM=${HOME}/.gdrive

[ -f ${GHOM}/gdhome ] || {
    HERE=`pwd`
    while true
    do
        read -p "Initializing gdrive home to ${HERE}. Ok ? ('Y'/'N'): " yn
        case $yn in
            [Yy]*)
                [ -d ${GHOM} ] || mkdir -p ${GHOM}
                echo "GDHOME=${HERE}" > ${GHOM}/gdhome
                break
                ;;
            [Nn]*)
                read -p "Enter your gdrive home: " gdhome
                case ${gdhome} in
                    *)
                        echo "GDHOME=${gdhome}" > ${GHOM}/gdhome
                        ;;
                esac
                break
                ;;
            * )
                echo "Please answer yes or no."
                ;;
        esac
    done
}

. ${GHOM}/gdhome
[ -d ${GDHOME} ] || {
    echo "Cannot locate gdrive home ${GDHOME}"
    echo "Edit ${GHOM}/gdhome and set your local gdrive home"
    exit 1
}
cd ${GDHOME}

for file in "$@"
do
    # Check to see if this is a sync folder
    exists=
    pdir=`dirname "${file}"`
    [ -f "${pdir}"/.folderid ] || {
        echo "Missing ${pdir}/.folderid"
        echo "Run 'getfolderids' to populate folders with ids"
        echo "Skipping upload of ${file}"
        continue
    }
    parentid=`cat "${pdir}"/.folderid`
    while read match
    do
        syncid=`echo ${match} | awk ' { print $1 } '`
        [ "${syncid}" == "${parentid}" ] && {
          exists=${syncid}
          break
        }
    done <<< `gdrive sync list --no-header`

    [ "${exists}" ] && {
      echo "${pdir} is a sync folder."
      echo "Currently files and directories cannot be uploaded to sync folders."
      echo "Place the desired uploads in the local ${pdir} folder"
      echo "and run 'sync2drive ${pdir}'"
      continue
    }

    recursive=
    if [ -d "${file}" ]
    then
        recursive="--recursive"
    else
        [ -f "${file}" ] || {
            echo "$file does not exist in local directory. Skipping."
            continue
        }
    fi
    gdrive upload ${recursive} --parent ${parentid} "${file}"
done
