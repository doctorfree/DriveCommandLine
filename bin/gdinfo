#!/bin/bash
#
# Author: Ronald Joe Record <ronaldrecord@gmail.com>
#
# See https://developers.google.com/drive/api/v3/ref-search-terms#operators
# for more info on the Google Drive for Developers API (V3)
#
gdinst=`type -p gdrive`
[ "${gdinst}" ] || {
    echo "The 'gdrive' command is not installed or not in the execution PATH"
    echo "Visit https://github.com/prasmussen/gdrive/releases to download"
    echo "a 'gdrive' binary for this platform"
    exit 1
}

GHOM=${HOME}/.gdrive
GDOPTS="--no-header --absolute --max 1000 --name-width 0"

[ -f ${GHOM}/gdhome ] || {
  HERE=`pwd`
  while true
  do
    read -p "Initializing gdrive home to ${HERE}. Ok ? ('Y'/'N'): " yn
    case $yn in
        [Yy]*)
            [ -d ${GHOM} ] || mkdir -p ${GHOM}
            echo "GDHOME=${HERE}" > ${GHOM}/gdhome
            break
            ;;
        [Nn]*)
            read -p "Enter your gdrive home: " gdhome
            case ${gdhome} in
                *)
                    echo "GDHOME=${gdhome}" > ${GHOM}/gdhome
                    ;;
            esac
            break
            ;;
        * )
            echo "Please answer yes or no."
            ;;
    esac
  done
}

. ${GHOM}/gdhome
[ -d ${GDHOME} ] || {
    echo "Cannot locate gdrive home ${GDHOME}"
    echo "Edit ${GHOM}/gdhome and set your local gdrive home"
    exit 1
}
cd ${GDHOME}

usage() {
  printf "\nUsage: gdinfo [-i id] [-u] path/to/fileorfolder [file2 ...]"
  printf "\nWhere:\n\t-i 'id' specifies a Google Drive ID to retrieve for info"
  printf "\n\t-u displays this usage message\n"
  exit 1
}

id=
while getopts "i:u" flag; do
    case $flag in
        i)
            id="${OPTARG}"
            ;;
        u)
            usage
            ;;
    esac
done
shift $(( OPTIND - 1 ))

if [ "${id}" ]
then
  gdrive info ${id}
else
  for name in "$@"
  do
    fid=
    folder=`dirname "${name}"`
    [ -f ${folder}/.folderid ] || continue
    parentid=`cat "${folder}"/.folderid`
    base=`basename "${name}"`
    while read match
    do
      thisID=`echo ${match} | awk ' { print $1 } '`
      [ "${thisID}" ] || continue
      thisPath=`gdrive info ${thisID} | grep ^Path: | awk -F ':' ' { print $2 } '`
      # Remove leading and trailing spaces
      thisPath="$(echo -e "${thisPath}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
      [ "${thisPath}" == "${name}" ] && {
        fid=${thisID}
        break
      }
    done <<< `gdrive list ${GDOPTS} --query " name = '${base}' and parents in '${parentid}'"`
    [ "${fid}" ] && gdrive info ${fid}
  done
fi
