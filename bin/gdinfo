#!/bin/bash
#
# Author: Ronald Joe Record <ronaldrecord@gmail.com>
#
# See https://developers.google.com/drive/api/v3/ref-search-terms#operators
# for more info on the Google Drive for Developers API (V3)
#
gdinst=`type -p gdrive`
[ "${gdinst}" ] || {
    echo "The 'gdrive' command is not installed or not in the execution PATH"
    echo "Visit https://github.com/doctorfree/DriveCommandLine/releases to download"
    echo "a 'DriveCommandLine' distribution archive or package for this platform"
    exit 1
}

GHOM=${HOME}/.gdrive
GDOPTS="--no-header --absolute --max 1000 --name-width 0"

get_gdhome() {
  [ -f ${GHOM}/gdhome ] || {
    HERE="${HOME}/gdrive"
    while true
    do
        read -p "Initializing gdrive home to ${HERE}. Ok ? ('Y'/'N'): " yn
        case $yn in
            [Yy]*)
                [ -d ${GHOM} ] || mkdir -p ${GHOM}
                echo "GDHOME=${HERE}" > ${GHOM}/gdhome
                break
                ;;
            [Nn]*)
                read -p "Enter your gdrive home: " gdhome
                case ${gdhome} in
                    *)
                        echo "GDHOME=${gdhome}" > ${GHOM}/gdhome
                        ;;
                esac
                break
                ;;
            * )
                echo "Please answer yes or no."
                ;;
        esac
    done
  }

  . ${GHOM}/gdhome
  [ -d ${GDHOME} ] || mkdir -p ${GDHOME}
  cd ${GDHOME}
}

usage() {
  printf "\nUsage: gdinfo [-c configdir] [-i id] [-u] path/to/fileorfolder [file2 ...]"
  printf "\nWhere:\n\t-i 'id' specifies a Google Drive ID to retrieve for info"
  printf "\n\t-c 'configdir' specifies an alternative gdrive config folder (default: $HOME/.gdrive)"
  printf "\n\t-u displays this usage message\n"
  exit 1
}

id=
export GDRIVE=gdrive
while getopts "c:i:u" flag; do
    case $flag in
        c)
            GHOM="${OPTARG}"
            export GDRIVE="gdrive --config ${OPTARG}"
            ;;
        i)
            id="${OPTARG}"
            ;;
        u)
            usage
            ;;
    esac
done
shift $(( OPTIND - 1 ))

get_gdhome

if [ "${id}" ]
then
  ${GDRIVE} info ${id}
else
  for name in "$@"
  do
    fid=
    folder=`dirname "${name}"`
    [ -f ${folder}/.folderid ] || continue
    parentid=`cat "${folder}"/.folderid`
    base=`basename "${name}"`
    while read match
    do
      thisID=`echo ${match} | awk ' { print $1 } '`
      [ "${thisID}" ] || continue
      thisPath=`${GDRIVE} info ${thisID} | grep ^Path: | awk -F ':' ' { print $2 } '`
      # Remove leading and trailing spaces
      thisPath="$(echo -e "${thisPath}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
      [ "${thisPath}" == "${name}" ] && {
        fid=${thisID}
        break
      }
    done <<< `${GDRIVE} list ${GDOPTS} --query " name = '${base}' and parents in '${parentid}'"`
    [ "${fid}" ] && ${GDRIVE} info ${fid}
  done
fi
