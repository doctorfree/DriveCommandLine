# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

image: golang:latest

variables:
  # Please edit to your GitLab project
  REPO_NAME: gitlab.com/doctorfree/DriveCommandLine

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - build

compile:
  stage: build
  script:
    - go build -ldflags '-w -s' -o ${CI_PROJECT_DIR}/gdrive
  artifacts:
    paths:
      - gdrive

run-build:  
  stage: build
  script:
    - ./mkpkg

  # This stage is only executed for new tags
  only:
    - tags

  # The files which are to be made available in GitLab
  artifacts:
    paths:
      - dist/*.deb
      - dist/*.rpm
      - dist/*.gz
